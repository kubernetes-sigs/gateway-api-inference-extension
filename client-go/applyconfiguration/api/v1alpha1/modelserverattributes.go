/*
Copyright 2024 The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/
// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "inference.networking.x-k8s.io/llm-instance-gateway/api/v1alpha1"
)

// ModelServerAttributesApplyConfiguration represents a declarative configuration of the ModelServerAttributes type for use
// with apply.
type ModelServerAttributesApplyConfiguration struct {
	LoRAEnabled *bool            `json:"loraEnabled,omitempty"`
	VLLM        *v1alpha1.VLLM   `json:"vllm,omitempty"`
	Triton      *v1alpha1.Triton `json:"triton,omitempty"`
}

// ModelServerAttributesApplyConfiguration constructs a declarative configuration of the ModelServerAttributes type for use with
// apply.
func ModelServerAttributes() *ModelServerAttributesApplyConfiguration {
	return &ModelServerAttributesApplyConfiguration{}
}

// WithLoRAEnabled sets the LoRAEnabled field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the LoRAEnabled field is set to the value of the last call.
func (b *ModelServerAttributesApplyConfiguration) WithLoRAEnabled(value bool) *ModelServerAttributesApplyConfiguration {
	b.LoRAEnabled = &value
	return b
}

// WithVLLM sets the VLLM field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the VLLM field is set to the value of the last call.
func (b *ModelServerAttributesApplyConfiguration) WithVLLM(value v1alpha1.VLLM) *ModelServerAttributesApplyConfiguration {
	b.VLLM = &value
	return b
}

// WithTriton sets the Triton field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Triton field is set to the value of the last call.
func (b *ModelServerAttributesApplyConfiguration) WithTriton(value v1alpha1.Triton) *ModelServerAttributesApplyConfiguration {
	b.Triton = &value
	return b
}
