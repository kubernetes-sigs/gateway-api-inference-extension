/*
Copyright 2024.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/
// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	apiv1alpha1 "inference.networking.x-k8s.io/llm-instance-gateway/api/v1alpha1"
	labels "k8s.io/apimachinery/pkg/labels"
	listers "k8s.io/client-go/listers"
	cache "k8s.io/client-go/tools/cache"
)

// LLMServiceLister helps list LLMServices.
// All objects returned here must be treated as read-only.
type LLMServiceLister interface {
	// List lists all LLMServices in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*apiv1alpha1.LLMService, err error)
	// LLMServices returns an object that can list and get LLMServices.
	LLMServices(namespace string) LLMServiceNamespaceLister
	LLMServiceListerExpansion
}

// lLMServiceLister implements the LLMServiceLister interface.
type lLMServiceLister struct {
	listers.ResourceIndexer[*apiv1alpha1.LLMService]
}

// NewLLMServiceLister returns a new LLMServiceLister.
func NewLLMServiceLister(indexer cache.Indexer) LLMServiceLister {
	return &lLMServiceLister{listers.New[*apiv1alpha1.LLMService](indexer, apiv1alpha1.Resource("llmservice"))}
}

// LLMServices returns an object that can list and get LLMServices.
func (s *lLMServiceLister) LLMServices(namespace string) LLMServiceNamespaceLister {
	return lLMServiceNamespaceLister{listers.NewNamespaced[*apiv1alpha1.LLMService](s.ResourceIndexer, namespace)}
}

// LLMServiceNamespaceLister helps list and get LLMServices.
// All objects returned here must be treated as read-only.
type LLMServiceNamespaceLister interface {
	// List lists all LLMServices in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*apiv1alpha1.LLMService, err error)
	// Get retrieves the LLMService from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*apiv1alpha1.LLMService, error)
	LLMServiceNamespaceListerExpansion
}

// lLMServiceNamespaceLister implements the LLMServiceNamespaceLister
// interface.
type lLMServiceNamespaceLister struct {
	listers.ResourceIndexer[*apiv1alpha1.LLMService]
}
