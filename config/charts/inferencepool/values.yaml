inferenceExtension:
  replicas: 1
  image:
    name: epp
    hub: us-central1-docker.pkg.dev/k8s-staging-images/gateway-api-inference-extension
    tag: main
    pullPolicy: Always
  extProcPort: 9002
  env: []
  pluginsConfigFile: "default-plugins.yaml"
  # Define additional container ports
  extraContainerPorts: []
  # Define additional service ports
  extraServicePorts: []

  # This is the plugins configuration file.
  # pluginsCustomConfig:
  #   custom-plugins.yaml: |
  #     apiVersion: inference.networking.x-k8s.io/v1alpha1
  #     kind: EndpointPickerConfig
  #     plugins:
  #     - type: custom-scorer
  #       parameters:
  #         custom-threshold: 64
  #     schedulingProfiles:
  #     - name: default
  #       plugins:
  #       - pluginRef: custom-scorer

  # Example environment variables:
  # env:
  #   ENABLE_EXPERIMENTAL_FEATURE: "true"

  flags:
    # Log verbosity
    - name: v
      value: 1

  affinity: {}

  tolerations: []

  # Monitoring configuration for EPP
  monitoring:
    interval: "10s"
    # Prometheus ServiceMonitor will be created when enabled for EPP metrics collection
    prometheus:
      enabled: false
      auth:
        enabled: true
        # Service account token secret for authentication
        secretName: inference-gateway-sa-metrics-reader-secret
      # additional labels for the ServiceMonitor
      extraLabels: {}

    # DEPRECATED: The 'gke' configuration will be removed in the next release.
    gke:
      enabled: false
  tracing:
    enabled: false
    # When jaeger.enabled is true, this will automatically point to the Jaeger collector
    # Otherwise, you can specify your own OpenTelemetry collector endpoint
    otelExporterEndpoint: "http://localhost:4317"
    sampling:
      sampler: "parentbased_traceidratio"
      samplerArg: "0.1"

inferencePool:
  targetPorts:
    - number: 8000
  modelServerType: vllm # vllm, triton-tensorrt-llm
  apiVersion: inference.networking.k8s.io/v1 
  # modelServers: # REQUIRED
  #   matchLabels:
  #     app: vllm-llama3-8b-instruct

  # Should only used if apiVersion is inference.networking.x-k8s.io/v1alpha2, 
  # This will soon be deprecated when upstream GW providers support v1, just doing something simple for now.
  targetPortNumber: 8000

# Options: ["gke", "istio", "none"]
provider:
  name: none

  # GKE-specific configuration.
  # This block is only used if name is "gke".
  gke:
    # Set to true if the cluster is an Autopilot cluster.
    autopilot: false

istio:
  destinationRule:
    # Provide a way to override the default calculated host
    host: "" 
    # Optional: Enables customization of the traffic policy
    trafficPolicy: {}
      # connectionPool:
      #   http:
      #     maxRequestsPerConnection: 256000

# Jaeger tracing backend configuration
# When enabled, deploys Jaeger all-in-one for trace collection and visualization
jaeger:
  enabled: false
  # Use the all-in-one deployment mode for simplicity
  # For production, consider using a more robust deployment with separate components
  allInOne:
    enabled: true
    image:
      repository: jaegertracing/all-in-one
      tag: "2.11"
      pullPolicy: IfNotPresent
    resources:
      limits:
        cpu: 500m
        memory: 512Mi
      requests:
        cpu: 100m
        memory: 128Mi
  # Expose Jaeger UI service
  query:
    service:
      type: ClusterIP
      port: 16686
  # Collector configuration for OTLP
  collector:
    service:
      otlp:
        grpc:
          port: 4317
        http:
          port: 4318
  # Storage configuration - use in-memory for simplicity
  storage:
    type: memory
  # Agent configuration
  agent:
    enabled: false