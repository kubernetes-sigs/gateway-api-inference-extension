# conformance/tests/basic/inferencepool_resolvedrefs_condition.yaml

# This manifest defines the initial resources for the
# inferencepool_resolvedrefs_condition.go conformance test.

# --- Backend Deployment (using standard Gateway API echoserver) ---
# This Deployment provides Pods for the InferencePool to select.
apiVersion: apps/v1
kind: Deployment
metadata:
  name: infra-backend-deployment
  namespace: gateway-conformance-app-backend
  labels:
    app: infra-backend
spec:
  selector:
    matchLabels:
      app: infra-backend
  template:
    metadata:
      labels:
        app: infra-backend
    spec:
      containers:
      - name: echoserver
        image: gcr.io/k8s-staging-gateway-api/echo-basic:v20240412-v1.0.0-394-g40c666fd
        ports:
        - containerPort: 3000
        readinessProbe:
          httpGet:
            path: /
            port: 3000
          initialDelaySeconds: 3
          periodSeconds: 5
          failureThreshold: 2
        env:
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
---
# --- Backend Service ---
# Service for the infra-backend-deployment.
apiVersion: v1
kind: Service
metadata:
  name: infra-backend-svc
  namespace: gateway-conformance-app-backend
spec:
  selector:
    app: infra-backend
  ports:
  - name: http
    port: 3000
    targetPort: 3000
---
apiVersion: v1
kind: Service
metadata:
  name: infra-backend-epp
  namespace: gateway-conformance-app-backend
spec:
  selector:
    app: infra-backend-epp
  ports:
    - protocol: TCP
      port: 9002
      targetPort: 9002
      appProtocol: http2
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: infra-backend-epp
  namespace: gateway-conformance-app-backend
  labels:
    app: infra-backend-epp
spec:
  replicas: 1
  selector:
    matchLabels:
      app: infra-backend-epp
  template:
    metadata:
      labels:
        app: infra-backend-epp
    spec:
      # Conservatively, this timeout should mirror the longest grace period of the pods within the pool
      terminationGracePeriodSeconds: 130
      containers:
      - name: epp
        image: us-central1-docker.pkg.dev/k8s-staging-images/gateway-api-inference-extension/epp:main
        imagePullPolicy: Always
        args:
        - -poolName
        - "multi-gateway-pool"
        - -poolNamespace
        - "gateway-conformance-app-backend"
        - -v
        - "4"
        - --zap-encoder
        - "json"
        - -grpcPort
        - "9002"
        - -grpcHealthPort
        - "9003"
        env:
        - name: USE_STREAMING
          value: "true"
        ports:
        - containerPort: 9002
        - containerPort: 9003
        - name: metrics
          containerPort: 9090
        livenessProbe:
          grpc:
            port: 9003
            service: inference-extension
          initialDelaySeconds: 5
          periodSeconds: 10
        readinessProbe:
          grpc:
            port: 9003
            service: inference-extension
          initialDelaySeconds: 5
          periodSeconds: 10
---
# --- InferencePool Definition ---
apiVersion: inference.networking.x-k8s.io/v1alpha2
kind: InferencePool
metadata:
  name: multi-gateway-pool
  namespace: gateway-conformance-app-backend
spec:
  selector:
    app: "infra-backend"
  targetPortNumber: 3000
  extensionRef:
    name: infra-backend-epp
---
# --- HTTPRoute for Primary Gateway (conformance-gateway) ---
apiVersion: gateway.networking.k8s.io/v1
kind: HTTPRoute
metadata:
  name: httproute-for-primary-gw
  namespace: gateway-conformance-app-backend
spec:
  parentRefs:
  - group: gateway.networking.k8s.io
    kind: Gateway
    name: conformance-gateway
    namespace: gateway-conformance-infra
    sectionName: http
  hostnames:
  - "primary.example.com"
  rules:
  - backendRefs:
    - group: inference.networking.x-k8s.io
      kind: InferencePool
      name: multi-gateway-pool
      port: 3000
    matches:
    - path:
        type: PathPrefix
        value: /primary-gateway-test
---
# --- HTTPRoute for Secondary Gateway (conformance-secondary-gateway) ---
apiVersion: gateway.networking.k8s.io/v1
kind: HTTPRoute
metadata:
  name: httproute-for-secondary-gw
  namespace: gateway-conformance-app-backend
spec:
  parentRefs:
  - group: gateway.networking.k8s.io
    kind: Gateway
    name: conformance-secondary-gateway
    namespace: gateway-conformance-infra
    sectionName: http
  hostnames:
  - "secondary.example.com"
  rules:
  - backendRefs:
    - group: inference.networking.x-k8s.io
      kind: InferencePool
      name: multi-gateway-pool
      port: 3000
    matches:
    - path:
        type: PathPrefix
        value: /secondary-gateway-test
